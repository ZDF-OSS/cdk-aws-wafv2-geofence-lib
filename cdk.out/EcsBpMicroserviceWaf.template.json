{
 "Resources": {
  "integvpc115426B5": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/Resource"
   }
  },
  "integvpcPublicSubnet1Subnet3D6DBC80": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1/Subnet"
   }
  },
  "integvpcPublicSubnet1RouteTable3F825F0C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1/RouteTable"
   }
  },
  "integvpcPublicSubnet1RouteTableAssociation8E9E7465": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPublicSubnet1RouteTable3F825F0C"
    },
    "SubnetId": {
     "Ref": "integvpcPublicSubnet1Subnet3D6DBC80"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "integvpcPublicSubnet1DefaultRoute6E6FACEB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPublicSubnet1RouteTable3F825F0C"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "integvpcIGWE025940C"
    }
   },
   "DependsOn": [
    "integvpcVPCGW4D09CCCB"
   ],
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "integvpcPublicSubnet1EIPE1ABB123": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1/EIP"
   }
  },
  "integvpcPublicSubnet1NATGateway40CD2E70": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "integvpcPublicSubnet1Subnet3D6DBC80"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "integvpcPublicSubnet1EIPE1ABB123",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "integvpcPublicSubnet1DefaultRoute6E6FACEB",
    "integvpcPublicSubnet1RouteTableAssociation8E9E7465"
   ],
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet1/NATGateway"
   }
  },
  "integvpcPublicSubnet2Subnet6D5EE190": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2/Subnet"
   }
  },
  "integvpcPublicSubnet2RouteTable05630A9E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2/RouteTable"
   }
  },
  "integvpcPublicSubnet2RouteTableAssociationFD33CD0F": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPublicSubnet2RouteTable05630A9E"
    },
    "SubnetId": {
     "Ref": "integvpcPublicSubnet2Subnet6D5EE190"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "integvpcPublicSubnet2DefaultRoute94BA7AD9": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPublicSubnet2RouteTable05630A9E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "integvpcIGWE025940C"
    }
   },
   "DependsOn": [
    "integvpcVPCGW4D09CCCB"
   ],
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "integvpcPublicSubnet2EIP2114ECA6": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2/EIP"
   }
  },
  "integvpcPublicSubnet2NATGatewayD5455F45": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "integvpcPublicSubnet2Subnet6D5EE190"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "integvpcPublicSubnet2EIP2114ECA6",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "integvpcPublicSubnet2DefaultRoute94BA7AD9",
    "integvpcPublicSubnet2RouteTableAssociationFD33CD0F"
   ],
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PublicSubnet2/NATGateway"
   }
  },
  "integvpcPrivateSubnet1Subnet977C46DE": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet1/Subnet"
   }
  },
  "integvpcPrivateSubnet1RouteTable8D014434": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet1/RouteTable"
   }
  },
  "integvpcPrivateSubnet1RouteTableAssociation985D890E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPrivateSubnet1RouteTable8D014434"
    },
    "SubnetId": {
     "Ref": "integvpcPrivateSubnet1Subnet977C46DE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "integvpcPrivateSubnet1DefaultRoute06F2E4BC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPrivateSubnet1RouteTable8D014434"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "integvpcPublicSubnet1NATGateway40CD2E70"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "integvpcPrivateSubnet2Subnet27BCB194": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet2/Subnet"
   }
  },
  "integvpcPrivateSubnet2RouteTableF119B76D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet2/RouteTable"
   }
  },
  "integvpcPrivateSubnet2RouteTableAssociationC35FC1A4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPrivateSubnet2RouteTableF119B76D"
    },
    "SubnetId": {
     "Ref": "integvpcPrivateSubnet2Subnet27BCB194"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "integvpcPrivateSubnet2DefaultRoute6C4DE9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "integvpcPrivateSubnet2RouteTableF119B76D"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "integvpcPublicSubnet2NATGatewayD5455F45"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "integvpcIGWE025940C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcsBpMicroserviceWaf/integ-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/IGW"
   }
  },
  "integvpcVPCGW4D09CCCB": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "integvpc115426B5"
    },
    "InternetGatewayId": {
     "Ref": "integvpcIGWE025940C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-vpc/VPCGW"
   }
  },
  "integecscluster3B3D0FC5": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "integ-ecs-cluster"
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-ecs-cluster/Resource"
   }
  },
  "integtdTaskRoleBEA38D8E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-td/TaskRole/Resource"
   }
  },
  "integtd7F2797CE": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:4721ec62e4727fb2ce626cff4f6b934cdb3de155ad5ded6f1dd8b2bd0cd16288"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "integtdintegcontainerLogGroup4EF70DD4"
        },
        "awslogs-stream-prefix": "integ",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "integ",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "integtdExecutionRole0E25582B",
      "Arn"
     ]
    },
    "Family": "EcsBpMicroserviceWafintegtd70C4819D",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "ARM64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "integtdTaskRoleBEA38D8E",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-td/Resource"
   }
  },
  "integtdintegcontainerLogGroup4EF70DD4": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-td/integ-container/LogGroup/Resource"
   }
  },
  "integtdExecutionRole0E25582B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-td/ExecutionRole/Resource"
   }
  },
  "integtdExecutionRoleDefaultPolicy524910C7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "integtdintegcontainerLogGroup4EF70DD4",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "integtdExecutionRoleDefaultPolicy524910C7",
    "Roles": [
     {
      "Ref": "integtdExecutionRole0E25582B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-td/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "integsgB0D60C50": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EcsBpMicroserviceWaf/integ-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allowing traffic to the backend",
      "FromPort": 808,
      "IpProtocol": "tcp",
      "ToPort": 808
     }
    ],
    "VpcId": {
     "Ref": "integvpc115426B5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-sg/Resource"
   }
  },
  "integsgfromEcsBpMicroserviceWafinteglbSecurityGroup7F113FF28040C746F2": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "integsgB0D60C50",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "integlbSecurityGroup2BD5D913",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-sg/from EcsBpMicroserviceWafinteglbSecurityGroup7F113FF2:80"
   }
  },
  "integserviceServiceCA084882": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "integecscluster3B3D0FC5"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "integ",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "integlbinteglistenerintegtargetsGroup54D0D8ED"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "integsgB0D60C50",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "integvpcPrivateSubnet1Subnet977C46DE"
       },
       {
        "Ref": "integvpcPrivateSubnet2Subnet27BCB194"
       }
      ]
     }
    },
    "ServiceName": "integ-service",
    "TaskDefinition": {
     "Ref": "integtd7F2797CE"
    }
   },
   "DependsOn": [
    "integlbinteglistenerintegtargetsGroup54D0D8ED",
    "integlbinteglistener210E4B05"
   ],
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-service/Service"
   }
  },
  "integserviceTaskCountTargetC4EA67AB": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "integecscluster3B3D0FC5"
       },
       "/",
       {
        "Fn::GetAtt": [
         "integserviceServiceCA084882",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-service/TaskCount/Target/Resource"
   }
  },
  "integserviceTaskCountTargetRequestScaling700AB0B6": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "EcsBpMicroserviceWafintegserviceTaskCountTargetRequestScaling165F354B",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "integserviceTaskCountTargetC4EA67AB"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ALBRequestCountPerTarget",
      "ResourceLabel": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "/",
             {
              "Ref": "integlbinteglistener210E4B05"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Ref": "integlbinteglistener210E4B05"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "/",
             {
              "Ref": "integlbinteglistener210E4B05"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::GetAtt": [
           "integlbinteglistenerintegtargetsGroup54D0D8ED",
           "TargetGroupFullName"
          ]
         }
        ]
       ]
      }
     },
     "TargetValue": 500
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-service/TaskCount/Target/RequestScaling/Resource"
   }
  },
  "integlbD793B2E9": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "integ-lb",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "integlbSecurityGroup2BD5D913",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "integvpcPublicSubnet1Subnet3D6DBC80"
     },
     {
      "Ref": "integvpcPublicSubnet2Subnet6D5EE190"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "integvpcPublicSubnet1DefaultRoute6E6FACEB",
    "integvpcPublicSubnet1RouteTableAssociation8E9E7465",
    "integvpcPublicSubnet2DefaultRoute94BA7AD9",
    "integvpcPublicSubnet2RouteTableAssociationFD33CD0F"
   ],
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-lb/Resource"
   }
  },
  "integlbSecurityGroup2BD5D913": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB EcsBpMicroserviceWafinteglbCDC9D99F",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 808",
      "FromPort": 808,
      "IpProtocol": "tcp",
      "ToPort": 808
     }
    ],
    "VpcId": {
     "Ref": "integvpc115426B5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-lb/SecurityGroup/Resource"
   }
  },
  "integlbSecurityGrouptoEcsBpMicroserviceWafintegsg9F9D15B6800C087B28": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "integlbSecurityGroup2BD5D913",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "integsgB0D60C50",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-lb/SecurityGroup/to EcsBpMicroserviceWafintegsg9F9D15B6:80"
   }
  },
  "integlbinteglistener210E4B05": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "integlbinteglistenerintegtargetsGroup54D0D8ED"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "integlbD793B2E9"
    },
    "Port": 808,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-lb/integ-listener/Resource"
   }
  },
  "integlbinteglistenerintegtargetsGroup54D0D8ED": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Name": "integ-targets",
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "deregistration_delay.timeout_seconds",
      "Value": "1"
     },
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "integvpc115426B5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/integ-lb/integ-listener/integ-targetsGroup/Resource"
   }
  },
  "CdkWafGeoLibWafAcl34B12DC7": {
   "Type": "AWS::WAFv2::WebACL",
   "Properties": {
    "DefaultAction": {
     "Allow": {}
    },
    "Scope": "REGIONAL",
    "VisibilityConfig": {
     "CloudWatchMetricsEnabled": true,
     "MetricName": "WAF",
     "SampledRequestsEnabled": true
    },
    "Description": "This is a WAFv2 web acl that delivers geoblocking for your backends.",
    "Name": "GeoBlockingWafRules",
    "Rules": [
     {
      "Action": {
       "Block": {}
      },
      "Name": "GeoBlockage",
      "Priority": 500,
      "Statement": {
       "NotStatement": {
        "Statement": {
         "GeoMatchStatement": {
          "CountryCodes": [
           "DE"
          ]
         }
        }
       }
      },
      "VisibilityConfig": {
       "CloudWatchMetricsEnabled": true,
       "MetricName": "GeoBlock",
       "SampledRequestsEnabled": true
      }
     }
    ],
    "Tags": [
     {
      "Key": "cdk-component",
      "Value": "cdk-wafv2-geoblock"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/Cdk-Waf-Geo-Lib/WafAcl"
   }
  },
  "CdkWafGeoLibWAFAssociationCF0B3CAE": {
   "Type": "AWS::WAFv2::WebACLAssociation",
   "Properties": {
    "ResourceArn": {
     "Ref": "integlbD793B2E9"
    },
    "WebACLArn": {
     "Fn::GetAtt": [
      "CdkWafGeoLibWafAcl34B12DC7",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/Cdk-Waf-Geo-Lib/WAFAssociation"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31T227bMAz9lr4rahsMQ19TtysCBINhF91jQSuMp8aRDF0SBIb/fZTkWzZgTzw6pETykFrzp2/84Q4udiX2x1UjK96VDsSREfXZoVjz7qMVLDuojzxjua8aKUpfKXSBm1GhvcN3qBqc+ZnbWKuFBCe1moIDeN3mwfwE9wYOL3BluZFngvPDW+XQEB4DUiXDaeOo1t8nVI6VKLyR7vpmtG9jDf8ltqo2aO0//Guke4bC8i5rvKXsIWiEP8DUELqyxxc8SCXHnv5mtHIgFZoFN9wt0ZylSDoNsBTQBJ3CI5n2yoUCzCdYi87yFy2OaLYnqIOQJAv5eIGtttJpc30Gi0zCiXeFTvJHm2saVdQroZ41uqamdrqeJBlxz6BtKShOCLzTlgqSqqZlmCoz9TDzWyaZd0M7QxfKdG/OfUNQVw1YJ0WjYV/RM0qQ70w7tpnT78j3HH1J+ZvzMk7SQNQQM+KFPxU2tbo49uwCh5CV6F9YbbIdm9BiU/ueFWi1NzSgqDt9jJrqjQqPjrAaWu3jgHum9B75l70/P37n6wf6WF9WypWhgcoT8iLZP+tU9aB0AwAA"
   },
   "Metadata": {
    "aws:cdk:path": "EcsBpMicroserviceWaf/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}